# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package 

on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  Python-Build:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_X86_64_IMAGE: 'quay.io/pypa/manylinux_2_28_x86_64:latest'
            
          - os: ubuntu-latest
            arch: x86_64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_X86_64_IMAGE: 'quay.io/pypa/manylinux2014_x86_64:latest'
              
          - os: ubuntu-latest
            arch: aarch64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_AARCH64_IMAGE: 'quay.io/pypa/manylinux_2_28_aarch64:latest'
            
          - os: ubuntu-latest
            arch: aarch64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_AARCH64_IMAGE: 'quay.io/pypa/manylinux2014_aarch64:latest'
            
          - os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='11.0'"
            
          - os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos  
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='10.16'"
            
          - os: macos-latest
            arch: arm64
            CIBW_PLATFORM: macos
            
          #- os: windows-latest
          #  arch: AMD64
          #  CIBW_PLATFORM: windows
            
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: ${{ runner.os == 'Linux'  && matrix.arch == 'aarch64'}}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        if: runner.os == 'Linux'
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.1
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_PLATFORM: ${{ matrix.CIBW_PLATFORM }}
          CIBW_ENVIRONMENT: ${{ matrix.CIBW_ENVIRONMENT }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.CIBW_MANYLINUX_X86_64_IMAGE }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.CIBW_MANYLINUX_AARCH64_IMAGE }}
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./wheelhouse/*.whl
          retention-days: 30
      - name: Show 
        run: du -a ./wheelhouse
    
     
  JFrog-Publish:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest   
    needs: Python-Build
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: package 
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://jij.jfrog.io/artifactory/api/pypi/Jij-Private
          user: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASSWORD }}
          
